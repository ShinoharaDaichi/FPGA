// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 SJ Web Edition"

// DATE "12/10/2015 09:34:51"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter8bit (
	clk,
	reset,
	enable,
	counter_output);
input 	clk;
input 	reset;
input 	enable;
output 	[7:0] counter_output;

// Design Ports Information
// counter_output[0]	=>  Location: PIN_G1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// counter_output[1]	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// counter_output[2]	=>  Location: PIN_G2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// counter_output[3]	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// counter_output[4]	=>  Location: PIN_K2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// counter_output[5]	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// counter_output[6]	=>  Location: PIN_K1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// counter_output[7]	=>  Location: PIN_J2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_E16,	 I/O Standard: 2.5 V,	 Current Strength: Default
// enable	=>  Location: PIN_E15,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("counter8bit_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire counter_output_a0_a_aoutput_o;
wire counter_output_a1_a_aoutput_o;
wire counter_output_a2_a_aoutput_o;
wire counter_output_a3_a_aoutput_o;
wire counter_output_a4_a_aoutput_o;
wire counter_output_a5_a_aoutput_o;
wire counter_output_a6_a_aoutput_o;
wire counter_output_a7_a_aoutput_o;
wire clk_ainput_o;
wire clk_ainputclkctrl_outclk;
wire cnt_a0_a_a8_combout;
wire reset_ainput_o;
wire enable_ainput_o;
wire cnt_a0_a_a10_combout;
wire cnt_a0_a_a9;
wire cnt_a1_a_a11_combout;
wire cnt_a1_a_a12;
wire cnt_a2_a_a13_combout;
wire cnt_a2_a_a14;
wire cnt_a3_a_a15_combout;
wire cnt_a3_a_a16;
wire cnt_a4_a_a17_combout;
wire cnt_a4_a_a18;
wire cnt_a5_a_a19_combout;
wire cnt_a5_a_a20;
wire cnt_a6_a_a21_combout;
wire cnt_a6_a_a22;
wire cnt_a7_a_a23_combout;
wire [31:0] cnt;

wire counter_output_a0_a_aoutput_I_driver;
wire counter_output_a1_a_aoutput_I_driver;
wire counter_output_a2_a_aoutput_I_driver;
wire counter_output_a3_a_aoutput_I_driver;
wire counter_output_a4_a_aoutput_I_driver;
wire counter_output_a5_a_aoutput_I_driver;
wire counter_output_a6_a_aoutput_I_driver;
wire counter_output_a7_a_aoutput_I_driver;
wire clk_ainput_I_driver;
wire cnt_a0_a_a8_DATAB_driver;
wire reset_ainput_I_driver;
wire enable_ainput_I_driver;
wire cnt_a0_a_a10_DATAC_driver;
wire cnt_a0_a_a10_DATAD_driver;
wire cnt_a0_a_CLK_driver;
wire cnt_a0_a_D_driver;
wire cnt_a0_a_SCLR_driver;
wire cnt_a0_a_ENA_driver;
wire cnt_a1_a_a11_DATAB_driver;
wire cnt_a1_a_a11_CIN_driver;
wire cnt_a1_a_CLK_driver;
wire cnt_a1_a_D_driver;
wire cnt_a1_a_SCLR_driver;
wire cnt_a1_a_ENA_driver;
wire cnt_a2_a_a13_DATAB_driver;
wire cnt_a2_a_a13_CIN_driver;
wire cnt_a2_a_CLK_driver;
wire cnt_a2_a_D_driver;
wire cnt_a2_a_SCLR_driver;
wire cnt_a2_a_ENA_driver;
wire cnt_a3_a_a15_DATAA_driver;
wire cnt_a3_a_a15_CIN_driver;
wire cnt_a3_a_CLK_driver;
wire cnt_a3_a_D_driver;
wire cnt_a3_a_SCLR_driver;
wire cnt_a3_a_ENA_driver;
wire cnt_a4_a_a17_DATAB_driver;
wire cnt_a4_a_a17_CIN_driver;
wire cnt_a4_a_CLK_driver;
wire cnt_a4_a_D_driver;
wire cnt_a4_a_SCLR_driver;
wire cnt_a4_a_ENA_driver;
wire cnt_a5_a_a19_DATAA_driver;
wire cnt_a5_a_a19_CIN_driver;
wire cnt_a5_a_CLK_driver;
wire cnt_a5_a_D_driver;
wire cnt_a5_a_SCLR_driver;
wire cnt_a5_a_ENA_driver;
wire cnt_a6_a_a21_DATAA_driver;
wire cnt_a6_a_a21_CIN_driver;
wire cnt_a6_a_CLK_driver;
wire cnt_a6_a_D_driver;
wire cnt_a6_a_SCLR_driver;
wire cnt_a6_a_ENA_driver;
wire cnt_a7_a_a23_DATAB_driver;
wire cnt_a7_a_a23_CIN_driver;
wire cnt_a7_a_CLK_driver;
wire cnt_a7_a_D_driver;
wire cnt_a7_a_SCLR_driver;
wire cnt_a7_a_ENA_driver;
wire [3:0] clk_ainputclkctrl_INCLK_bus;

cycloneive_routing_wire counter_output_a0_a_aoutput_I_routing_wire_inst (
	.datain(cnt[0]),
	.dataout(counter_output_a0_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y23_N23
cycloneive_io_obuf counter_output_a0_a_aoutput(
	.i(counter_output_a0_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a0_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a0_a_aoutput.bus_hold = "false";
defparam counter_output_a0_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire counter_output_a1_a_aoutput_I_routing_wire_inst (
	.datain(cnt[1]),
	.dataout(counter_output_a1_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y11_N2
cycloneive_io_obuf counter_output_a1_a_aoutput(
	.i(counter_output_a1_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a1_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a1_a_aoutput.bus_hold = "false";
defparam counter_output_a1_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire counter_output_a2_a_aoutput_I_routing_wire_inst (
	.datain(cnt[2]),
	.dataout(counter_output_a2_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y23_N16
cycloneive_io_obuf counter_output_a2_a_aoutput(
	.i(counter_output_a2_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a2_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a2_a_aoutput.bus_hold = "false";
defparam counter_output_a2_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire counter_output_a3_a_aoutput_I_routing_wire_inst (
	.datain(cnt[3]),
	.dataout(counter_output_a3_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y11_N9
cycloneive_io_obuf counter_output_a3_a_aoutput(
	.i(counter_output_a3_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a3_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a3_a_aoutput.bus_hold = "false";
defparam counter_output_a3_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire counter_output_a4_a_aoutput_I_routing_wire_inst (
	.datain(cnt[4]),
	.dataout(counter_output_a4_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y12_N2
cycloneive_io_obuf counter_output_a4_a_aoutput(
	.i(counter_output_a4_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a4_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a4_a_aoutput.bus_hold = "false";
defparam counter_output_a4_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire counter_output_a5_a_aoutput_I_routing_wire_inst (
	.datain(cnt[5]),
	.dataout(counter_output_a5_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y15_N9
cycloneive_io_obuf counter_output_a5_a_aoutput(
	.i(counter_output_a5_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a5_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a5_a_aoutput.bus_hold = "false";
defparam counter_output_a5_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire counter_output_a6_a_aoutput_I_routing_wire_inst (
	.datain(cnt[6]),
	.dataout(counter_output_a6_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y12_N9
cycloneive_io_obuf counter_output_a6_a_aoutput(
	.i(counter_output_a6_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a6_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a6_a_aoutput.bus_hold = "false";
defparam counter_output_a6_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire counter_output_a7_a_aoutput_I_routing_wire_inst (
	.datain(cnt[7]),
	.dataout(counter_output_a7_a_aoutput_I_driver));

// Location: IOOBUF_X0_Y15_N2
cycloneive_io_obuf counter_output_a7_a_aoutput(
	.i(counter_output_a7_a_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(counter_output_a7_a_aoutput_o),
	.obar());
// synopsys translate_off
defparam counter_output_a7_a_aoutput.bus_hold = "false";
defparam counter_output_a7_a_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire clk_ainput_I_routing_wire_inst (
	.datain(clk),
	.dataout(clk_ainput_I_driver));

// Location: IOIBUF_X0_Y16_N8
cycloneive_io_ibuf clk_ainput(
	.i(clk_ainput_I_driver),
	.ibar(gnd),
	.o(clk_ainput_o));
// synopsys translate_off
defparam clk_ainput.bus_hold = "false";
defparam clk_ainput.simulate_z_as = "z";
// synopsys translate_on

cycloneive_routing_wire clk_ainputclkctrl_INCLK_a0_a_routing_wire_inst (
	.datain(clk_ainput_o),
	.dataout(clk_ainputclkctrl_INCLK_bus[0]));

cycloneive_routing_wire clk_ainputclkctrl_INCLK_a1_a_routing_wire_inst (
	.datain(vcc),
	.dataout(clk_ainputclkctrl_INCLK_bus[1]));

cycloneive_routing_wire clk_ainputclkctrl_INCLK_a2_a_routing_wire_inst (
	.datain(vcc),
	.dataout(clk_ainputclkctrl_INCLK_bus[2]));

cycloneive_routing_wire clk_ainputclkctrl_INCLK_a3_a_routing_wire_inst (
	.datain(vcc),
	.dataout(clk_ainputclkctrl_INCLK_bus[3]));

// Location: CLKCTRL_G2
cycloneive_clkctrl clk_ainputclkctrl(
	.ena(vcc),
	.inclk(clk_ainputclkctrl_INCLK_bus),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(clk_ainputclkctrl_outclk));
// synopsys translate_off
defparam clk_ainputclkctrl.clock_type = "global clock";
defparam clk_ainputclkctrl.ena_register_mode = "none";
// synopsys translate_on

cycloneive_routing_wire cnt_a0_a_a8_DATAB_routing_wire_inst (
	.datain(cnt[0]),
	.dataout(cnt_a0_a_a8_DATAB_driver));

// Location: LCCOMB_X1_Y15_N0
cycloneive_lcell_comb cnt_a0_a_a8(
// Equation(s):
// cnt_a0_a_a8_combout = cnt[0] $ (VCC)
// cnt_a0_a_a9 = CARRY(cnt[0])

	.dataa(gnd),
	.datab(cnt_a0_a_a8_DATAB_driver),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(cnt_a0_a_a8_combout),
	.cout(cnt_a0_a_a9));
// synopsys translate_off
defparam cnt_a0_a_a8.lut_mask = 16'h33CC;
defparam cnt_a0_a_a8.sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_routing_wire reset_ainput_I_routing_wire_inst (
	.datain(reset),
	.dataout(reset_ainput_I_driver));

// Location: IOIBUF_X53_Y17_N8
cycloneive_io_ibuf reset_ainput(
	.i(reset_ainput_I_driver),
	.ibar(gnd),
	.o(reset_ainput_o));
// synopsys translate_off
defparam reset_ainput.bus_hold = "false";
defparam reset_ainput.simulate_z_as = "z";
// synopsys translate_on

cycloneive_routing_wire enable_ainput_I_routing_wire_inst (
	.datain(enable),
	.dataout(enable_ainput_I_driver));

// Location: IOIBUF_X53_Y17_N1
cycloneive_io_ibuf enable_ainput(
	.i(enable_ainput_I_driver),
	.ibar(gnd),
	.o(enable_ainput_o));
// synopsys translate_off
defparam enable_ainput.bus_hold = "false";
defparam enable_ainput.simulate_z_as = "z";
// synopsys translate_on

cycloneive_routing_wire cnt_a0_a_a10_DATAC_routing_wire_inst (
	.datain(enable_ainput_o),
	.dataout(cnt_a0_a_a10_DATAC_driver));

cycloneive_routing_wire cnt_a0_a_a10_DATAD_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a0_a_a10_DATAD_driver));

// Location: LCCOMB_X1_Y15_N16
cycloneive_lcell_comb cnt_a0_a_a10(
// Equation(s):
// cnt_a0_a_a10_combout = (enable_ainput_o) # (reset_ainput_o)

	.dataa(gnd),
	.datab(gnd),
	.datac(cnt_a0_a_a10_DATAC_driver),
	.datad(cnt_a0_a_a10_DATAD_driver),
	.cin(gnd),
	.combout(cnt_a0_a_a10_combout),
	.cout());
// synopsys translate_off
defparam cnt_a0_a_a10.lut_mask = 16'hFFF0;
defparam cnt_a0_a_a10.sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_routing_wire cnt_a0_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a0_a_CLK_driver));

cycloneive_routing_wire cnt_a0_a_D_routing_wire_inst (
	.datain(cnt_a0_a_a8_combout),
	.dataout(cnt_a0_a_D_driver));

cycloneive_routing_wire cnt_a0_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a0_a_SCLR_driver));

cycloneive_routing_wire cnt_a0_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a0_a_ENA_driver));

// Location: FF_X1_Y15_N1
dffeas cnt_a0_a(
	.clk(cnt_a0_a_CLK_driver),
	.d(cnt_a0_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a0_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a0_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[0]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a0_a.is_wysiwyg = "true";
defparam cnt_a0_a.power_up = "low";
// synopsys translate_on

cycloneive_routing_wire cnt_a1_a_a11_DATAB_routing_wire_inst (
	.datain(cnt[1]),
	.dataout(cnt_a1_a_a11_DATAB_driver));

cycloneive_routing_wire cnt_a1_a_a11_CIN_routing_wire_inst (
	.datain(cnt_a0_a_a9),
	.dataout(cnt_a1_a_a11_CIN_driver));

// Location: LCCOMB_X1_Y15_N2
cycloneive_lcell_comb cnt_a1_a_a11(
// Equation(s):
// cnt_a1_a_a11_combout = (cnt[1] & (!cnt_a0_a_a9)) # (!cnt[1] & ((cnt_a0_a_a9) # (GND)))
// cnt_a1_a_a12 = CARRY((!cnt_a0_a_a9) # (!cnt[1]))

	.dataa(gnd),
	.datab(cnt_a1_a_a11_DATAB_driver),
	.datac(gnd),
	.datad(vcc),
	.cin(cnt_a1_a_a11_CIN_driver),
	.combout(cnt_a1_a_a11_combout),
	.cout(cnt_a1_a_a12));
// synopsys translate_off
defparam cnt_a1_a_a11.lut_mask = 16'h3C3F;
defparam cnt_a1_a_a11.sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_routing_wire cnt_a1_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a1_a_CLK_driver));

cycloneive_routing_wire cnt_a1_a_D_routing_wire_inst (
	.datain(cnt_a1_a_a11_combout),
	.dataout(cnt_a1_a_D_driver));

cycloneive_routing_wire cnt_a1_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a1_a_SCLR_driver));

cycloneive_routing_wire cnt_a1_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a1_a_ENA_driver));

// Location: FF_X1_Y15_N3
dffeas cnt_a1_a(
	.clk(cnt_a1_a_CLK_driver),
	.d(cnt_a1_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a1_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a1_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[1]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a1_a.is_wysiwyg = "true";
defparam cnt_a1_a.power_up = "low";
// synopsys translate_on

cycloneive_routing_wire cnt_a2_a_a13_DATAB_routing_wire_inst (
	.datain(cnt[2]),
	.dataout(cnt_a2_a_a13_DATAB_driver));

cycloneive_routing_wire cnt_a2_a_a13_CIN_routing_wire_inst (
	.datain(cnt_a1_a_a12),
	.dataout(cnt_a2_a_a13_CIN_driver));

// Location: LCCOMB_X1_Y15_N4
cycloneive_lcell_comb cnt_a2_a_a13(
// Equation(s):
// cnt_a2_a_a13_combout = (cnt[2] & (cnt_a1_a_a12 $ (GND))) # (!cnt[2] & (!cnt_a1_a_a12 & VCC))
// cnt_a2_a_a14 = CARRY((cnt[2] & !cnt_a1_a_a12))

	.dataa(gnd),
	.datab(cnt_a2_a_a13_DATAB_driver),
	.datac(gnd),
	.datad(vcc),
	.cin(cnt_a2_a_a13_CIN_driver),
	.combout(cnt_a2_a_a13_combout),
	.cout(cnt_a2_a_a14));
// synopsys translate_off
defparam cnt_a2_a_a13.lut_mask = 16'hC30C;
defparam cnt_a2_a_a13.sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_routing_wire cnt_a2_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a2_a_CLK_driver));

cycloneive_routing_wire cnt_a2_a_D_routing_wire_inst (
	.datain(cnt_a2_a_a13_combout),
	.dataout(cnt_a2_a_D_driver));

cycloneive_routing_wire cnt_a2_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a2_a_SCLR_driver));

cycloneive_routing_wire cnt_a2_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a2_a_ENA_driver));

// Location: FF_X1_Y15_N5
dffeas cnt_a2_a(
	.clk(cnt_a2_a_CLK_driver),
	.d(cnt_a2_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a2_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a2_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[2]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a2_a.is_wysiwyg = "true";
defparam cnt_a2_a.power_up = "low";
// synopsys translate_on

cycloneive_routing_wire cnt_a3_a_a15_DATAA_routing_wire_inst (
	.datain(cnt[3]),
	.dataout(cnt_a3_a_a15_DATAA_driver));

cycloneive_routing_wire cnt_a3_a_a15_CIN_routing_wire_inst (
	.datain(cnt_a2_a_a14),
	.dataout(cnt_a3_a_a15_CIN_driver));

// Location: LCCOMB_X1_Y15_N6
cycloneive_lcell_comb cnt_a3_a_a15(
// Equation(s):
// cnt_a3_a_a15_combout = (cnt[3] & (!cnt_a2_a_a14)) # (!cnt[3] & ((cnt_a2_a_a14) # (GND)))
// cnt_a3_a_a16 = CARRY((!cnt_a2_a_a14) # (!cnt[3]))

	.dataa(cnt_a3_a_a15_DATAA_driver),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(cnt_a3_a_a15_CIN_driver),
	.combout(cnt_a3_a_a15_combout),
	.cout(cnt_a3_a_a16));
// synopsys translate_off
defparam cnt_a3_a_a15.lut_mask = 16'h5A5F;
defparam cnt_a3_a_a15.sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_routing_wire cnt_a3_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a3_a_CLK_driver));

cycloneive_routing_wire cnt_a3_a_D_routing_wire_inst (
	.datain(cnt_a3_a_a15_combout),
	.dataout(cnt_a3_a_D_driver));

cycloneive_routing_wire cnt_a3_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a3_a_SCLR_driver));

cycloneive_routing_wire cnt_a3_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a3_a_ENA_driver));

// Location: FF_X1_Y15_N7
dffeas cnt_a3_a(
	.clk(cnt_a3_a_CLK_driver),
	.d(cnt_a3_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a3_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a3_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[3]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a3_a.is_wysiwyg = "true";
defparam cnt_a3_a.power_up = "low";
// synopsys translate_on

cycloneive_routing_wire cnt_a4_a_a17_DATAB_routing_wire_inst (
	.datain(cnt[4]),
	.dataout(cnt_a4_a_a17_DATAB_driver));

cycloneive_routing_wire cnt_a4_a_a17_CIN_routing_wire_inst (
	.datain(cnt_a3_a_a16),
	.dataout(cnt_a4_a_a17_CIN_driver));

// Location: LCCOMB_X1_Y15_N8
cycloneive_lcell_comb cnt_a4_a_a17(
// Equation(s):
// cnt_a4_a_a17_combout = (cnt[4] & (cnt_a3_a_a16 $ (GND))) # (!cnt[4] & (!cnt_a3_a_a16 & VCC))
// cnt_a4_a_a18 = CARRY((cnt[4] & !cnt_a3_a_a16))

	.dataa(gnd),
	.datab(cnt_a4_a_a17_DATAB_driver),
	.datac(gnd),
	.datad(vcc),
	.cin(cnt_a4_a_a17_CIN_driver),
	.combout(cnt_a4_a_a17_combout),
	.cout(cnt_a4_a_a18));
// synopsys translate_off
defparam cnt_a4_a_a17.lut_mask = 16'hC30C;
defparam cnt_a4_a_a17.sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_routing_wire cnt_a4_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a4_a_CLK_driver));

cycloneive_routing_wire cnt_a4_a_D_routing_wire_inst (
	.datain(cnt_a4_a_a17_combout),
	.dataout(cnt_a4_a_D_driver));

cycloneive_routing_wire cnt_a4_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a4_a_SCLR_driver));

cycloneive_routing_wire cnt_a4_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a4_a_ENA_driver));

// Location: FF_X1_Y15_N9
dffeas cnt_a4_a(
	.clk(cnt_a4_a_CLK_driver),
	.d(cnt_a4_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a4_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a4_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[4]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a4_a.is_wysiwyg = "true";
defparam cnt_a4_a.power_up = "low";
// synopsys translate_on

cycloneive_routing_wire cnt_a5_a_a19_DATAA_routing_wire_inst (
	.datain(cnt[5]),
	.dataout(cnt_a5_a_a19_DATAA_driver));

cycloneive_routing_wire cnt_a5_a_a19_CIN_routing_wire_inst (
	.datain(cnt_a4_a_a18),
	.dataout(cnt_a5_a_a19_CIN_driver));

// Location: LCCOMB_X1_Y15_N10
cycloneive_lcell_comb cnt_a5_a_a19(
// Equation(s):
// cnt_a5_a_a19_combout = (cnt[5] & (!cnt_a4_a_a18)) # (!cnt[5] & ((cnt_a4_a_a18) # (GND)))
// cnt_a5_a_a20 = CARRY((!cnt_a4_a_a18) # (!cnt[5]))

	.dataa(cnt_a5_a_a19_DATAA_driver),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(cnt_a5_a_a19_CIN_driver),
	.combout(cnt_a5_a_a19_combout),
	.cout(cnt_a5_a_a20));
// synopsys translate_off
defparam cnt_a5_a_a19.lut_mask = 16'h5A5F;
defparam cnt_a5_a_a19.sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_routing_wire cnt_a5_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a5_a_CLK_driver));

cycloneive_routing_wire cnt_a5_a_D_routing_wire_inst (
	.datain(cnt_a5_a_a19_combout),
	.dataout(cnt_a5_a_D_driver));

cycloneive_routing_wire cnt_a5_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a5_a_SCLR_driver));

cycloneive_routing_wire cnt_a5_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a5_a_ENA_driver));

// Location: FF_X1_Y15_N11
dffeas cnt_a5_a(
	.clk(cnt_a5_a_CLK_driver),
	.d(cnt_a5_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a5_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a5_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[5]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a5_a.is_wysiwyg = "true";
defparam cnt_a5_a.power_up = "low";
// synopsys translate_on

cycloneive_routing_wire cnt_a6_a_a21_DATAA_routing_wire_inst (
	.datain(cnt[6]),
	.dataout(cnt_a6_a_a21_DATAA_driver));

cycloneive_routing_wire cnt_a6_a_a21_CIN_routing_wire_inst (
	.datain(cnt_a5_a_a20),
	.dataout(cnt_a6_a_a21_CIN_driver));

// Location: LCCOMB_X1_Y15_N12
cycloneive_lcell_comb cnt_a6_a_a21(
// Equation(s):
// cnt_a6_a_a21_combout = (cnt[6] & (cnt_a5_a_a20 $ (GND))) # (!cnt[6] & (!cnt_a5_a_a20 & VCC))
// cnt_a6_a_a22 = CARRY((cnt[6] & !cnt_a5_a_a20))

	.dataa(cnt_a6_a_a21_DATAA_driver),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(cnt_a6_a_a21_CIN_driver),
	.combout(cnt_a6_a_a21_combout),
	.cout(cnt_a6_a_a22));
// synopsys translate_off
defparam cnt_a6_a_a21.lut_mask = 16'hA50A;
defparam cnt_a6_a_a21.sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_routing_wire cnt_a6_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a6_a_CLK_driver));

cycloneive_routing_wire cnt_a6_a_D_routing_wire_inst (
	.datain(cnt_a6_a_a21_combout),
	.dataout(cnt_a6_a_D_driver));

cycloneive_routing_wire cnt_a6_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a6_a_SCLR_driver));

cycloneive_routing_wire cnt_a6_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a6_a_ENA_driver));

// Location: FF_X1_Y15_N13
dffeas cnt_a6_a(
	.clk(cnt_a6_a_CLK_driver),
	.d(cnt_a6_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a6_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a6_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[6]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a6_a.is_wysiwyg = "true";
defparam cnt_a6_a.power_up = "low";
// synopsys translate_on

cycloneive_routing_wire cnt_a7_a_a23_DATAB_routing_wire_inst (
	.datain(cnt[7]),
	.dataout(cnt_a7_a_a23_DATAB_driver));

cycloneive_routing_wire cnt_a7_a_a23_CIN_routing_wire_inst (
	.datain(cnt_a6_a_a22),
	.dataout(cnt_a7_a_a23_CIN_driver));

// Location: LCCOMB_X1_Y15_N14
cycloneive_lcell_comb cnt_a7_a_a23(
// Equation(s):
// cnt_a7_a_a23_combout = cnt[7] $ (cnt_a6_a_a22)

	.dataa(gnd),
	.datab(cnt_a7_a_a23_DATAB_driver),
	.datac(gnd),
	.datad(gnd),
	.cin(cnt_a7_a_a23_CIN_driver),
	.combout(cnt_a7_a_a23_combout),
	.cout());
// synopsys translate_off
defparam cnt_a7_a_a23.lut_mask = 16'h3C3C;
defparam cnt_a7_a_a23.sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_routing_wire cnt_a7_a_CLK_routing_wire_inst (
	.datain(!clk_ainputclkctrl_outclk),
	.dataout(cnt_a7_a_CLK_driver));

cycloneive_routing_wire cnt_a7_a_D_routing_wire_inst (
	.datain(cnt_a7_a_a23_combout),
	.dataout(cnt_a7_a_D_driver));

cycloneive_routing_wire cnt_a7_a_SCLR_routing_wire_inst (
	.datain(reset_ainput_o),
	.dataout(cnt_a7_a_SCLR_driver));

cycloneive_routing_wire cnt_a7_a_ENA_routing_wire_inst (
	.datain(cnt_a0_a_a10_combout),
	.dataout(cnt_a7_a_ENA_driver));

// Location: FF_X1_Y15_N15
dffeas cnt_a7_a(
	.clk(cnt_a7_a_CLK_driver),
	.d(cnt_a7_a_D_driver),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(cnt_a7_a_SCLR_driver),
	.sload(gnd),
	.ena(cnt_a7_a_ENA_driver),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[7]),
	.prn(vcc));
// synopsys translate_off
defparam cnt_a7_a.is_wysiwyg = "true";
defparam cnt_a7_a.power_up = "low";
// synopsys translate_on

assign counter_output[0] = counter_output_a0_a_aoutput_o;

assign counter_output[1] = counter_output_a1_a_aoutput_o;

assign counter_output[2] = counter_output_a2_a_aoutput_o;

assign counter_output[3] = counter_output_a3_a_aoutput_o;

assign counter_output[4] = counter_output_a4_a_aoutput_o;

assign counter_output[5] = counter_output_a5_a_aoutput_o;

assign counter_output[6] = counter_output_a6_a_aoutput_o;

assign counter_output[7] = counter_output_a7_a_aoutput_o;

endmodule
