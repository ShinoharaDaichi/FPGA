|servo
clk => pwm:pwm_1.clk
duty[0] => pwm:pwm_1.duty[0]
duty[0] => quad_segment7:quad_segment7_1.number[0]
duty[1] => pwm:pwm_1.duty[1]
duty[1] => quad_segment7:quad_segment7_1.number[1]
duty[2] => pwm:pwm_1.duty[2]
duty[2] => quad_segment7:quad_segment7_1.number[2]
duty[3] => pwm:pwm_1.duty[3]
duty[3] => quad_segment7:quad_segment7_1.number[3]
duty[4] => pwm:pwm_1.duty[4]
duty[4] => quad_segment7:quad_segment7_1.number[4]
duty[5] => pwm:pwm_1.duty[5]
duty[5] => quad_segment7:quad_segment7_1.number[5]
duty[6] => pwm:pwm_1.duty[6]
duty[6] => quad_segment7:quad_segment7_1.number[6]
duty[7] => pwm:pwm_1.duty[7]
duty[7] => quad_segment7:quad_segment7_1.number[7]
pwm_output[0] <= pwm:pwm_1.pwm_out[0]
enable_pwm => pwm:pwm_1.ena
reset_pwm => pwm:pwm_1.reset_n
increase => ~NO_FANOUT~
decrease => ~NO_FANOUT~
HEX00 <= quad_segment7:quad_segment7_1.HEX00
HEX01 <= quad_segment7:quad_segment7_1.HEX01
HEX02 <= quad_segment7:quad_segment7_1.HEX02
HEX03 <= quad_segment7:quad_segment7_1.HEX03
HEX04 <= quad_segment7:quad_segment7_1.HEX04
HEX05 <= quad_segment7:quad_segment7_1.HEX05
HEX06 <= quad_segment7:quad_segment7_1.HEX06
HEX10 <= quad_segment7:quad_segment7_1.HEX10
HEX11 <= quad_segment7:quad_segment7_1.HEX11
HEX12 <= quad_segment7:quad_segment7_1.HEX12
HEX13 <= quad_segment7:quad_segment7_1.HEX13
HEX14 <= quad_segment7:quad_segment7_1.HEX14
HEX15 <= quad_segment7:quad_segment7_1.HEX15
HEX16 <= quad_segment7:quad_segment7_1.HEX16
HEX20 <= quad_segment7:quad_segment7_1.HEX20
HEX21 <= quad_segment7:quad_segment7_1.HEX21
HEX22 <= quad_segment7:quad_segment7_1.HEX22
HEX23 <= quad_segment7:quad_segment7_1.HEX23
HEX24 <= quad_segment7:quad_segment7_1.HEX24
HEX25 <= quad_segment7:quad_segment7_1.HEX25
HEX26 <= quad_segment7:quad_segment7_1.HEX26
HEX30 <= quad_segment7:quad_segment7_1.HEX30
HEX31 <= quad_segment7:quad_segment7_1.HEX31
HEX32 <= quad_segment7:quad_segment7_1.HEX32
HEX33 <= quad_segment7:quad_segment7_1.HEX33
HEX34 <= quad_segment7:quad_segment7_1.HEX34
HEX35 <= quad_segment7:quad_segment7_1.HEX35
HEX36 <= quad_segment7:quad_segment7_1.HEX36


|servo|pwm:pwm_1
clk => half_duty[0][0].CLK
clk => half_duty[0][1].CLK
clk => half_duty[0][2].CLK
clk => half_duty[0][3].CLK
clk => half_duty[0][4].CLK
clk => half_duty[0][5].CLK
clk => half_duty[0][6].CLK
clk => half_duty[0][7].CLK
clk => half_duty[0][8].CLK
clk => half_duty[0][9].CLK
clk => half_duty[0][10].CLK
clk => half_duty[0][11].CLK
clk => half_duty[0][12].CLK
clk => half_duty[0][13].CLK
clk => half_duty[0][14].CLK
clk => half_duty[0][15].CLK
clk => half_duty[0][16].CLK
clk => half_duty[0][17].CLK
clk => half_duty[0][18].CLK
clk => half_duty_new[0].CLK
clk => half_duty_new[1].CLK
clk => half_duty_new[2].CLK
clk => half_duty_new[3].CLK
clk => half_duty_new[4].CLK
clk => half_duty_new[5].CLK
clk => half_duty_new[6].CLK
clk => half_duty_new[7].CLK
clk => half_duty_new[8].CLK
clk => half_duty_new[9].CLK
clk => half_duty_new[10].CLK
clk => half_duty_new[11].CLK
clk => half_duty_new[12].CLK
clk => half_duty_new[13].CLK
clk => half_duty_new[14].CLK
clk => half_duty_new[15].CLK
clk => half_duty_new[16].CLK
clk => half_duty_new[17].CLK
clk => half_duty_new[18].CLK
clk => pwm_n_out[0]~reg0.CLK
clk => pwm_out[0]~reg0.CLK
clk => count[0][0].CLK
clk => count[0][1].CLK
clk => count[0][2].CLK
clk => count[0][3].CLK
clk => count[0][4].CLK
clk => count[0][5].CLK
clk => count[0][6].CLK
clk => count[0][7].CLK
clk => count[0][8].CLK
clk => count[0][9].CLK
clk => count[0][10].CLK
clk => count[0][11].CLK
clk => count[0][12].CLK
clk => count[0][13].CLK
clk => count[0][14].CLK
clk => count[0][15].CLK
clk => count[0][16].CLK
clk => count[0][17].CLK
clk => count[0][18].CLK
clk => count[0][19].CLK
reset_n => pwm_n_out[0]~reg0.ACLR
reset_n => pwm_out[0]~reg0.ACLR
reset_n => count[0][0].ACLR
reset_n => count[0][1].ACLR
reset_n => count[0][2].ACLR
reset_n => count[0][3].ACLR
reset_n => count[0][4].ACLR
reset_n => count[0][5].ACLR
reset_n => count[0][6].ACLR
reset_n => count[0][7].ACLR
reset_n => count[0][8].ACLR
reset_n => count[0][9].ACLR
reset_n => count[0][10].ACLR
reset_n => count[0][11].ACLR
reset_n => count[0][12].ACLR
reset_n => count[0][13].ACLR
reset_n => count[0][14].ACLR
reset_n => count[0][15].ACLR
reset_n => count[0][16].ACLR
reset_n => count[0][17].ACLR
reset_n => count[0][18].ACLR
reset_n => count[0][19].ACLR
reset_n => half_duty[0][0].ENA
reset_n => half_duty_new[18].ENA
reset_n => half_duty_new[17].ENA
reset_n => half_duty_new[16].ENA
reset_n => half_duty_new[15].ENA
reset_n => half_duty_new[14].ENA
reset_n => half_duty_new[13].ENA
reset_n => half_duty_new[12].ENA
reset_n => half_duty_new[11].ENA
reset_n => half_duty_new[10].ENA
reset_n => half_duty_new[9].ENA
reset_n => half_duty_new[8].ENA
reset_n => half_duty_new[7].ENA
reset_n => half_duty_new[6].ENA
reset_n => half_duty_new[5].ENA
reset_n => half_duty_new[4].ENA
reset_n => half_duty_new[3].ENA
reset_n => half_duty_new[2].ENA
reset_n => half_duty_new[1].ENA
reset_n => half_duty_new[0].ENA
reset_n => half_duty[0][18].ENA
reset_n => half_duty[0][17].ENA
reset_n => half_duty[0][16].ENA
reset_n => half_duty[0][15].ENA
reset_n => half_duty[0][14].ENA
reset_n => half_duty[0][13].ENA
reset_n => half_duty[0][12].ENA
reset_n => half_duty[0][11].ENA
reset_n => half_duty[0][10].ENA
reset_n => half_duty[0][9].ENA
reset_n => half_duty[0][8].ENA
reset_n => half_duty[0][7].ENA
reset_n => half_duty[0][6].ENA
reset_n => half_duty[0][5].ENA
reset_n => half_duty[0][4].ENA
reset_n => half_duty[0][3].ENA
reset_n => half_duty[0][2].ENA
reset_n => half_duty[0][1].ENA
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
duty[0] => Mult0.IN27
duty[1] => Mult0.IN26
duty[2] => Mult0.IN25
duty[3] => Mult0.IN24
duty[4] => Mult0.IN23
duty[5] => Mult0.IN22
duty[6] => Mult0.IN21
duty[7] => Mult0.IN20
pwm_out[0] <= pwm_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pwm_n_out[0] <= pwm_n_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|servo|quad_segment7:quad_segment7_1
number[0] => segment7:LSB_segment7.digit[0]
number[1] => LessThan27.IN8
number[1] => Add27.IN8
number[1] => digit1[1].DATAA
number[2] => LessThan24.IN8
number[2] => Add24.IN8
number[2] => bcd.DATAA
number[3] => LessThan21.IN8
number[3] => Add21.IN8
number[3] => bcd.DATAA
number[4] => LessThan18.IN8
number[4] => Add18.IN8
number[4] => bcd.DATAA
number[5] => LessThan15.IN8
number[5] => Add15.IN8
number[5] => bcd.DATAA
number[6] => LessThan12.IN8
number[6] => Add12.IN8
number[6] => bcd.DATAA
number[7] => LessThan9.IN8
number[7] => Add9.IN8
number[7] => bcd.DATAA
number[8] => LessThan7.IN8
number[8] => Add7.IN8
number[8] => bcd.DATAA
number[9] => LessThan5.IN8
number[9] => Add5.IN8
number[9] => bcd.DATAA
number[10] => LessThan3.IN8
number[10] => Add3.IN8
number[10] => bcd.DATAA
number[11] => LessThan2.IN8
number[11] => Add2.IN8
number[11] => bcd.DATAA
number[12] => LessThan1.IN8
number[12] => Add1.IN8
number[12] => bcd.DATAA
number[13] => LessThan0.IN6
number[13] => Add0.IN6
number[13] => bcd.DATAA
number[14] => LessThan0.IN5
number[14] => Add0.IN5
number[14] => bcd.DATAA
number[15] => LessThan0.IN4
number[15] => Add0.IN4
number[15] => bcd.DATAA
input => ~NO_FANOUT~
cout <= <GND>
HEX00 <= segment7:LSB_segment7.HEX00
HEX01 <= segment7:LSB_segment7.HEX01
HEX02 <= segment7:LSB_segment7.HEX02
HEX03 <= segment7:LSB_segment7.HEX03
HEX04 <= segment7:LSB_segment7.HEX04
HEX05 <= segment7:LSB_segment7.HEX05
HEX06 <= segment7:LSB_segment7.HEX06
HEX10 <= segment7:second_segment7.HEX00
HEX11 <= segment7:second_segment7.HEX01
HEX12 <= segment7:second_segment7.HEX02
HEX13 <= segment7:second_segment7.HEX03
HEX14 <= segment7:second_segment7.HEX04
HEX15 <= segment7:second_segment7.HEX05
HEX16 <= segment7:second_segment7.HEX06
HEX20 <= segment7:third_segment7.HEX00
HEX21 <= segment7:third_segment7.HEX01
HEX22 <= segment7:third_segment7.HEX02
HEX23 <= segment7:third_segment7.HEX03
HEX24 <= segment7:third_segment7.HEX04
HEX25 <= segment7:third_segment7.HEX05
HEX26 <= segment7:third_segment7.HEX06
HEX30 <= segment7:MSB_segment7.HEX00
HEX31 <= segment7:MSB_segment7.HEX01
HEX32 <= segment7:MSB_segment7.HEX02
HEX33 <= segment7:MSB_segment7.HEX03
HEX34 <= segment7:MSB_segment7.HEX04
HEX35 <= segment7:MSB_segment7.HEX05
HEX36 <= segment7:MSB_segment7.HEX06


|servo|quad_segment7:quad_segment7_1|segment7:LSB_segment7
input => ~NO_FANOUT~
digit[0] => Mux0.IN19
digit[0] => Mux1.IN10
digit[0] => Mux2.IN10
digit[0] => Mux3.IN19
digit[0] => Mux4.IN10
digit[0] => Mux5.IN19
digit[0] => Mux6.IN19
digit[1] => Mux0.IN18
digit[1] => Mux1.IN9
digit[1] => Mux2.IN9
digit[1] => Mux3.IN18
digit[1] => Mux4.IN9
digit[1] => Mux5.IN18
digit[1] => Mux6.IN18
digit[2] => Mux0.IN17
digit[2] => Mux1.IN8
digit[2] => Mux2.IN8
digit[2] => Mux3.IN17
digit[2] => Mux4.IN8
digit[2] => Mux5.IN17
digit[2] => Mux6.IN17
digit[3] => Mux0.IN16
digit[3] => Mux3.IN16
digit[3] => Mux5.IN16
digit[3] => Mux6.IN16
cout <= <GND>
HEX00 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
HEX01 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX02 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX03 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX04 <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX05 <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX06 <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|servo|quad_segment7:quad_segment7_1|segment7:second_segment7
input => ~NO_FANOUT~
digit[0] => Mux0.IN19
digit[0] => Mux1.IN10
digit[0] => Mux2.IN10
digit[0] => Mux3.IN19
digit[0] => Mux4.IN10
digit[0] => Mux5.IN19
digit[0] => Mux6.IN19
digit[1] => Mux0.IN18
digit[1] => Mux1.IN9
digit[1] => Mux2.IN9
digit[1] => Mux3.IN18
digit[1] => Mux4.IN9
digit[1] => Mux5.IN18
digit[1] => Mux6.IN18
digit[2] => Mux0.IN17
digit[2] => Mux1.IN8
digit[2] => Mux2.IN8
digit[2] => Mux3.IN17
digit[2] => Mux4.IN8
digit[2] => Mux5.IN17
digit[2] => Mux6.IN17
digit[3] => Mux0.IN16
digit[3] => Mux3.IN16
digit[3] => Mux5.IN16
digit[3] => Mux6.IN16
cout <= <GND>
HEX00 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
HEX01 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX02 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX03 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX04 <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX05 <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX06 <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|servo|quad_segment7:quad_segment7_1|segment7:third_segment7
input => ~NO_FANOUT~
digit[0] => Mux0.IN19
digit[0] => Mux1.IN10
digit[0] => Mux2.IN10
digit[0] => Mux3.IN19
digit[0] => Mux4.IN10
digit[0] => Mux5.IN19
digit[0] => Mux6.IN19
digit[1] => Mux0.IN18
digit[1] => Mux1.IN9
digit[1] => Mux2.IN9
digit[1] => Mux3.IN18
digit[1] => Mux4.IN9
digit[1] => Mux5.IN18
digit[1] => Mux6.IN18
digit[2] => Mux0.IN17
digit[2] => Mux1.IN8
digit[2] => Mux2.IN8
digit[2] => Mux3.IN17
digit[2] => Mux4.IN8
digit[2] => Mux5.IN17
digit[2] => Mux6.IN17
digit[3] => Mux0.IN16
digit[3] => Mux3.IN16
digit[3] => Mux5.IN16
digit[3] => Mux6.IN16
cout <= <GND>
HEX00 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
HEX01 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX02 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX03 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX04 <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX05 <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX06 <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|servo|quad_segment7:quad_segment7_1|segment7:MSB_segment7
input => ~NO_FANOUT~
digit[0] => Mux0.IN19
digit[0] => Mux1.IN10
digit[0] => Mux2.IN10
digit[0] => Mux3.IN19
digit[0] => Mux4.IN10
digit[0] => Mux5.IN19
digit[0] => Mux6.IN19
digit[1] => Mux0.IN18
digit[1] => Mux1.IN9
digit[1] => Mux2.IN9
digit[1] => Mux3.IN18
digit[1] => Mux4.IN9
digit[1] => Mux5.IN18
digit[1] => Mux6.IN18
digit[2] => Mux0.IN17
digit[2] => Mux1.IN8
digit[2] => Mux2.IN8
digit[2] => Mux3.IN17
digit[2] => Mux4.IN8
digit[2] => Mux5.IN17
digit[2] => Mux6.IN17
digit[3] => Mux0.IN16
digit[3] => Mux3.IN16
digit[3] => Mux5.IN16
digit[3] => Mux6.IN16
cout <= <GND>
HEX00 <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
HEX01 <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX02 <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX03 <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX04 <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX05 <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX06 <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


