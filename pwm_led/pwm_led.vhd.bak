LIBRARY IEEE; 
USE IEEE.STD_LOGIC_1164.ALL; 
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.NUMERIC_STD.all;

ENTITY servo2 IS
	PORT ( 
			 clk	 : IN STD_LOGIC; 
			 duty  : IN STD_LOGIC_VECTOR( 7 DOWNTO 0 );
			 pwm_output_parallel : OUT STD_LOGIC_VECTOR( 0 DOWNTO 0);
			 pwm_output_incremental : OUT STD_LOGIC_VECTOR( 0 DOWNTO 0);
			 enable_pwm : IN STD_LOGIC;
			 reset_pwm  : IN STD_LOGIC;
			 changeup : IN STD_LOGIC;
			 changedown : IN STD_LOGIC;
          HEX00 : OUT STD_LOGIC;   
          HEX01 : OUT STD_LOGIC;   
          HEX02 : OUT STD_LOGIC;
          HEX03 : OUT STD_LOGIC;  
          HEX04 : OUT STD_LOGIC;  
          HEX05 : OUT STD_LOGIC;  
          HEX06 : OUT STD_LOGIC;  
			 HEX10 : OUT STD_LOGIC;
          HEX11 : OUT STD_LOGIC;   
          HEX12 : OUT STD_LOGIC;   
          HEX13 : OUT STD_LOGIC;  
          HEX14 : OUT STD_LOGIC;  
          HEX15 : OUT STD_LOGIC;  
          HEX16 : OUT STD_LOGIC;
			 HEX20 : OUT STD_LOGIC;   
          HEX21 : OUT STD_LOGIC;   
          HEX22 : OUT STD_LOGIC;   
          HEX23 : OUT STD_LOGIC;  
          HEX24 : OUT STD_LOGIC;  
          HEX25 : OUT STD_LOGIC;  
          HEX26 : OUT STD_LOGIC;
			 HEX30 : OUT STD_LOGIC;   
          HEX31 : OUT STD_LOGIC;   
          HEX32 : OUT STD_LOGIC;   
          HEX33 : OUT STD_LOGIC;  
          HEX34 : OUT STD_LOGIC;  
          HEX35 : OUT STD_LOGIC;  
          HEX36 : OUT STD_LOGIC 
         );
			
END servo2;

ARCHITECTURE servo_double_hybrid_input OF servo2 IS

COMPONENT servo IS 
	PORT ( 
			 clk	 : IN STD_LOGIC; 
			 duty  : IN STD_LOGIC_VECTOR( 7 DOWNTO 0 );
			 pwm_output : OUT STD_LOGIC_VECTOR( 0 DOWNTO 0); -- Must be a vector because the pwm entity can output multiple phases of PWM
			 enable_pwm : IN STD_LOGIC;
			 reset_pwm  : IN STD_LOGIC;
			 changeup : IN STD_LOGIC;
			 changedown : IN STD_LOGIC;
          HEX00 : OUT STD_LOGIC;   
          HEX01 : OUT STD_LOGIC;   
          HEX02 : OUT STD_LOGIC;   
          HEX03 : OUT STD_LOGIC;  
          HEX04 : OUT STD_LOGIC;  
          HEX05 : OUT STD_LOGIC;  
          HEX06 : OUT STD_LOGIC;  
			 HEX10 : OUT STD_LOGIC;
          HEX11 : OUT STD_LOGIC;   
          HEX12 : OUT STD_LOGIC;   
          HEX13 : OUT STD_LOGIC;  
          HEX14 : OUT STD_LOGIC;  
          HEX15 : OUT STD_LOGIC;  
          HEX16 : OUT STD_LOGIC;
			 HEX20 : OUT STD_LOGIC;   
          HEX21 : OUT STD_LOGIC;   
          HEX22 : OUT STD_LOGIC;   
          HEX23 : OUT STD_LOGIC;  
          HEX24 : OUT STD_LOGIC;  
          HEX25 : OUT STD_LOGIC;  
          HEX26 : OUT STD_LOGIC;
			 HEX30 : OUT STD_LOGIC;   
          HEX31 : OUT STD_LOGIC;   
          HEX32 : OUT STD_LOGIC;   
          HEX33 : OUT STD_LOGIC;  
          HEX34 : OUT STD_LOGIC;  
          HEX35 : OUT STD_LOGIC;  
          HEX36 : OUT STD_LOGIC 
         );
END COMPONENT;

BEGIN

servo_parallel_input : servo PORT MAP(clk,duty,pwm_output_parallel,enable_pwm,reset_pwm,changeup,changedown,HEX00,HEX01,HEX02,HEX03,HEX04,HEX05,HEX06,HEX10,HEX11,HEX12,HEX13,HEX14,HEX15,HEX16);
servo_incremental_input : servo PORT MAP(clk,duty,pwm_output_incremental,enable_pwm,reset_pwm,changeup,changedown,HEX20,HEX21,HEX22,HEX23,HEX24,HEX25,HEX26,HEX30,HEX31,HEX32,HEX33,HEX34,HEX35,HEX36);

END servo_double_hybrid_input;

CONFIGURATION servo_double_hybrid_input_cfg OF servo2 IS
	FOR servo_double_hybrid_input
	
		FOR servo_parallel_input : servo	
			USE CONFIGURATION WORK.servo_parallel_input_double_segment_cfg;
		END FOR;
		
		FOR servo_incremental_input : servo	
			USE CONFIGURATION WORK.servo_incremental_input_double_segment_cfg;
		END FOR;
		
	END FOR;
END servo_double_hybrid_input_cfg;